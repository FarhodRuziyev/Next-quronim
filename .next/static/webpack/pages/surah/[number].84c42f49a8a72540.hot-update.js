/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/surah/[number]",{

/***/ "./pages/surah/[number].tsx":
/*!**********************************!*\
  !*** ./pages/surah/[number].tsx ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import { surah } from \"../../utils/interface\";\n// export const getStaticPaths = async () => {\n//   const res = fetch(`http://api.alquran.cloud/v1/surah`);\n//   const repo = await res.json();\n//   const paths = repo?.data?.map((item: surah) => {\n//     return {\n//       params: {\n//         suraxId: `${item?.number}`,\n//       },\n//     };\n//   });\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9zdXJhaC9bbnVtYmVyXS50c3guanMiLCJtYXBwaW5ncyI6IkFBQUEsaURBQWlEO0FBRWpELDhDQUE4QztBQUM5Qyw0REFBNEQ7QUFDNUQsbUNBQW1DO0FBQ25DLHFEQUFxRDtBQUNyRCxlQUFlO0FBQ2Ysa0JBQWtCO0FBQ2xCLHNDQUFzQztBQUN0QyxXQUFXO0FBQ1gsU0FBUztBQUNULFFBQVE7QUFDUixhQUFhO0FBQ2IsYUFBYTtBQUNiLHVCQUF1QjtBQUN2QixPQUFPO0FBQ1AsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9zdXJhaC9bbnVtYmVyXS50c3g/OWRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBzdXJhaCB9IGZyb20gXCIuLi8uLi91dGlscy9pbnRlcmZhY2VcIjtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBnZXRTdGF0aWNQYXRocyA9IGFzeW5jICgpID0+IHtcclxuLy8gICBjb25zdCByZXMgPSBmZXRjaChgaHR0cDovL2FwaS5hbHF1cmFuLmNsb3VkL3YxL3N1cmFoYCk7XHJcbi8vICAgY29uc3QgcmVwbyA9IGF3YWl0IHJlcy5qc29uKCk7XHJcbi8vICAgY29uc3QgcGF0aHMgPSByZXBvPy5kYXRhPy5tYXAoKGl0ZW06IHN1cmFoKSA9PiB7XHJcbi8vICAgICByZXR1cm4ge1xyXG4vLyAgICAgICBwYXJhbXM6IHtcclxuLy8gICAgICAgICBzdXJheElkOiBgJHtpdGVtPy5udW1iZXJ9YCxcclxuLy8gICAgICAgfSxcclxuLy8gICAgIH07XHJcbi8vICAgfSk7XHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIHBhdGhzLFxyXG4vLyAgICAgZmFsbGJhY2s6IGZhbHNlLFxyXG4vLyAgIH07XHJcbi8vIH07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/surah/[number].tsx\n"));

/***/ })

});